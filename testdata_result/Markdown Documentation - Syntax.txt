    [32;1m1 Markdown: Syntax[0;22m
    â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

    [32mâ€¢ [0m[Main]([34m/projects/markdown/[0m)
    [32mâ€¢ [0m[Basics]([34m/projects/markdown/basics[0m
      [34m[0m)
    [32mâ€¢ [0m[Syntax]([34m[0m)
    [32mâ€¢ [0m[License]([34m/projects/markdown/licen[0m
      [34mse[0m)
    [32mâ€¢ [0m[Dingus]([34m/projects/markdown/dingus[0m
      [34m[0m)

    [32mâ€¢ [0m[Overview]([34m#overview[0m)
      [32mâ€¢ [0m[Philosophy]([34m#philosophy[0m)
      [32mâ€¢ [0m[Inline HTML]([34m#html[0m)
      [32mâ€¢ [0m[Automatic Escaping for Special
        Characters]([34m#autoescape[0m)
    [32mâ€¢ [0m[Block Elements]([34m#block[0m)
      [32mâ€¢ [0m[Paragraphs and Line Breaks]([34m#p[0m)
      [32mâ€¢ [0m[Headers]([34m#header[0m)
      [32mâ€¢ [0m[Blockquotes]([34m#blockquote[0m)
      [32mâ€¢ [0m[Lists]([34m#list[0m)
      [32mâ€¢ [0m[Code Blocks]([34m#precode[0m)
      [32mâ€¢ [0m[Horizontal Rules]([34m#hr[0m)
    [32mâ€¢ [0m[Span Elements]([34m#span[0m)
      [32mâ€¢ [0m[Links]([34m#link[0m)
      [32mâ€¢ [0m[Emphasis]([34m#em[0m)
      [32mâ€¢ [0m[Code]([34m#code[0m)
      [32mâ€¢ [0m[Images]([34m#img[0m)
    [32mâ€¢ [0m[Miscellaneous]([34m#misc[0m)
      [32mâ€¢ [0m[Backslash Escapes]([34m#backslash[0m)
      [32mâ€¢ [0m[Automatic Links]([34m#autolink[0m)

    [1mNote:[0m This document is itself
    written using Markdown; you can [see
    the source for it by adding '.text'
    to the URL]([34m/projects/markdown/synt[0m
    [34max.text[0m).

    â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

    [32;1m1.1 Overview[0;22m

    [92m1.1.1 Philosophy[0m

    Markdown is intended to be as
    easy-to-read and easy-to-write as is
    feasible.

    Readability, however, is emphasized
    above all else. A Markdown-formatted
    document should be publishable
    as-is, as plain text, without
    looking like it's been marked up
    with tags or formatting
    instructions. While Markdown's
    syntax has been influenced by
    several existing text-to-HTML
    filters -- including [Setext]([34mhttp:/[0m
    [34m/docutils.sourceforge.net/mirror/set[0m
    [34mext.html[0m), [atx]([34mhttp://www.aaronsw.[0m
    [34mcom/2002/atx/[0m), [Textile]([34mhttp://tex[0m
    [34mtism.com/tools/textile/[0m), [reStructu
    redText]([34mhttp://docutils.sourceforge[0m
    [34m.net/rst.html[0m), [Grutatext]([34mhttp://w[0m
    [34mww.triptico.com/software/grutatxt.ht[0m
    [34mml[0m), and [EtText]([34mhttp://ettext.tain[0m
    [34mt.org/doc/[0m) -- the single biggest
    source of inspiration for Markdown's
    syntax is the format of plain text
    email.

    To this end, Markdown's syntax is
    comprised entirely of punctuation
    characters, which punctuation
    characters have been carefully
    chosen so as to look like what they
    mean. E.g., asterisks around a word
    actually look like *emphasis*.
    Markdown lists look like, well,
    lists. Even blockquotes look like
    quoted passages of text, assuming
    you've ever used email.

    [92m1.1.2 Inline HTML[0m

    Markdown's syntax is intended for
    one purpose: to be used as a format
    for [3mwriting[23m for the web.

    Markdown is not a replacement for
    HTML, or even close to it. Its
    syntax is very small, corresponding
    only to a very small subset of HTML
    tags. The idea is [3mnot[23m to create a
    syntax that makes it easier to
    insert HTML tags. In my opinion,
    HTML tags are already easy to
    insert. The idea for Markdown is to
    make it easy to read, write, and
    edit prose. HTML is a [3mpublishing[23m
    format; Markdown is a [3mwriting[23m
    format. Thus, Markdown's formatting
    syntax only addresses issues that
    can be conveyed in plain text.

    For any markup that is not covered
    by Markdown's syntax, you simply use
    HTML itself. There's no need to
    preface it or delimit it to indicate
    that you're switching from Markdown
    to HTML; you just use the tags.

    The only restrictions are that
    block-level HTML elements -- e.g.
    [44;3m<div>[0;23m, [44;3m<table>[0;23m, [44;3m<pre>[0;23m, [44;3m<p>[0;23m, etc. --
    must be separated from surrounding
    content by blank lines, and the
    start and end tags of the block
    should not be indented with tabs or
    spaces. Markdown is smart enough not
    to add extra (unwanted) [44;3m<p>[0;23m tags
    around HTML block-level tags.

    For example, to add an HTML table to
    a Markdown article:

    [32;1mâ”ƒ [0;22mThis is a regular paragraph.
    [32;1mâ”ƒ [0;22m
    [32;1mâ”ƒ [0;22m<table>
    [32;1mâ”ƒ [0;22m    <tr>
    [32;1mâ”ƒ [0;22m        <td>Foo</td>
    [32;1mâ”ƒ [0;22m    </tr>
    [32;1mâ”ƒ [0;22m</table>
    [32;1mâ”ƒ [0;22m
    [32;1mâ”ƒ [0;22mThis is another regular paragraph.

    Note that Markdown formatting syntax
    is not processed within block-level
    HTML tags. E.g., you can't use
    Markdown-style [44;3m*emphasis*[0;23m inside an
    HTML block.

    Span-level HTML tags -- e.g. [44;3m<span>[0;23m,
    [44;3m<cite>[0;23m, or [44;3m<del>[0;23m -- can be used
    anywhere in a Markdown paragraph,
    list item, or header. If you want,
    you can even use HTML tags instead
    of Markdown formatting; e.g. if
    you'd prefer to use HTML [44;3m<a>[0;23m or
    [44;3m<img>[0;23m tags instead of Markdown's
    link or image syntax, go right
    ahead.

    Unlike block-level HTML tags,
    Markdown syntax [3mis[23m processed within
    span-level tags.

    [92m1.1.3 Automatic Escaping for Special[0m
    [92mCharacters[0m

    In HTML, there are two characters
    that demand special treatment: [44;3m<[0;23m and
    [44;3m&[0;23m. Left angle brackets are used to
    start tags; ampersands are used to
    denote HTML entities. If you want to
    use them as literal characters, you
    must escape them as entities, e.g.
    [44;3m&lt;[0;23m, and [44;3m&amp;[0;23m.

    Ampersands in particular are
    bedeviling for web writers. If you
    want to write about 'AT&T', you need
    to write '[44;3mAT&amp;T[0;23m'. You even need
    to escape ampersands within URLs.
    Thus, if you want to link to:

    [32;1mâ”ƒ [0;22mhttp://images.google.com/images?nu
    [32;1mâ”ƒ [0;22mm=30&q=larry+bird

    you need to encode the URL as:

    [32;1mâ”ƒ [0;22mhttp://images.google.com/images?nu
    [32;1mâ”ƒ [0;22mm=30&amp;q=larry+bird

    in your anchor tag [44;3mhref[0;23m attribute.
    Needless to say, this is easy to
    forget, and is probably the single
    most common source of HTML
    validation errors in otherwise
    well-marked-up web sites.

    Markdown allows you to use these
    characters naturally, taking care of
    all the necessary escaping for you.
    If you use an ampersand as part of
    an HTML entity, it remains
    unchanged; otherwise it will be
    translated into [44;3m&amp;[0;23m.

    So, if you want to include a
    copyright symbol in your article,
    you can write:

    [32;1mâ”ƒ [0;22m&copy;

    and Markdown will leave it alone.
    But if you write:

    [32;1mâ”ƒ [0;22mAT&T

    Markdown will translate it to:

    [32;1mâ”ƒ [0;22mAT&amp;T

    Similarly, because Markdown supports
    [inline HTML]([34m#html[0m), if you use
    angle brackets as delimiters for
    HTML tags, Markdown will treat them
    as such. But if you write:

    [32;1mâ”ƒ [0;22m4 < 5

    Markdown will translate it to:

    [32;1mâ”ƒ [0;22m4 &lt; 5

    However, inside Markdown code spans
    and blocks, angle brackets and
    ampersands are [3malways[23m encoded
    automatically. This makes it easy to
    use Markdown to write about HTML
    code. (As opposed to raw HTML, which
    is a terrible format for writing
    about HTML syntax, because every
    single [44;3m<[0;23m and [44;3m&[0;23m in your example code
    needs to be escaped.)

    â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

    [32;1m1.2 Block Elements[0;22m

    [92m1.2.1 Paragraphs and Line Breaks[0m

    A paragraph is simply one or more
    consecutive lines of text, separated
    by one or more blank lines. (A
    blank line is any line that looks
    like a blank line -- a line
    containing nothing but spaces or
    tabs is considered blank.) Normal
    paragraphs should not be intended
    with spaces or tabs.

    The implication of the "one or more
    consecutive lines of text" rule is
    that Markdown supports
    "hard-wrapped" text paragraphs. This
    differs significantly from most
    other text-to-HTML formatters
    (including Movable Type's "Convert
    Line Breaks" option) which translate
    every line break character in a
    paragraph into a [44;3m<br />[0;23m tag.

    When you [3mdo[23m want to insert a [44;3m<br />[0;23m
    break tag using Markdown, you end a
    line with two or more spaces, then
    type return.

    Yes, this takes a tad more effort to
    create a [44;3m<br />[0;23m, but a simplistic
    "every line break is a [44;3m<br />[0;23m" rule
    wouldn't work for Markdown.
    Markdown's email-style
    [blockquoting]([34m#blockquote[0m) and
    multi-paragraph [list items]([34m#list[0m)
    work best -- and look better -- when
    you format them with hard breaks.

    [92m1.2.2 Headers[0m

    Markdown supports two styles of
    headers, [Setext]([34mhttp://docutils.so[0m
    [34murceforge.net/mirror/setext.html[0m)
    and [atx]([34mhttp://www.aaronsw.com/200[0m
    [34m2/atx/[0m).

    Setext-style headers are
    "underlined" using equal signs (for
    first-level headers) and dashes (for
    second-level headers). For example:

    [32;1mâ”ƒ [0;22mThis is an H1
    [32;1mâ”ƒ [0;22m=============
    [32;1mâ”ƒ [0;22m
    [32;1mâ”ƒ [0;22mThis is an H2
    [32;1mâ”ƒ [0;22m-------------

    Any number of underlining [44;3m=[0;23m's or [44;3m-[0;23m's
    will work.

    Atx-style headers use 1-6 hash
    characters at the start of the line,
    corresponding to header levels 1-6.
    For example:

    [32;1mâ”ƒ [0;22m# This is an H1
    [32;1mâ”ƒ [0;22m
    [32;1mâ”ƒ [0;22m## This is an H2
    [32;1mâ”ƒ [0;22m
    [32;1mâ”ƒ [0;22m###### This is an H6

    Optionally, you may "close"
    atx-style headers. This is purely
    cosmetic -- you can use this if you
    think it looks better. The closing
    hashes don't even need to match the
    number of hashes used to open the
    header. (The number of opening
    hashes determines the header level.)
    :

    [32;1mâ”ƒ [0;22m# This is an H1 #
    [32;1mâ”ƒ [0;22m
    [32;1mâ”ƒ [0;22m## This is an H2 ##
    [32;1mâ”ƒ [0;22m
    [32;1mâ”ƒ [0;22m### This is an H3 ######

    [92m1.2.3 Blockquotes[0m

    Markdown uses email-style [44;3m>[0;23m
    characters for blockquoting. If
    you're familiar with quoting
    passages of text in an email
    message, then you know how to create
    a blockquote in Markdown. It looks
    best if you hard wrap the text and
    put a [44;3m>[0;23m before every line:

    [32;1mâ”ƒ [0;22m> This is a blockquote with two
    [32;1mâ”ƒ [0;22mparagraphs. Lorem ipsum dolor sit
    [32;1mâ”ƒ [0;22mamet,
    [32;1mâ”ƒ [0;22m> consectetuer adipiscing elit.
    [32;1mâ”ƒ [0;22mAliquam hendrerit mi posuere
    [32;1mâ”ƒ [0;22mlectus.
    [32;1mâ”ƒ [0;22m> Vestibulum enim wisi, viverra
    [32;1mâ”ƒ [0;22mnec, fringilla in, laoreet vitae,
    [32;1mâ”ƒ [0;22mrisus.
    [32;1mâ”ƒ [0;22m>
    [32;1mâ”ƒ [0;22m> Donec sit amet nisl. Aliquam
    [32;1mâ”ƒ [0;22msemper ipsum sit amet velit.
    [32;1mâ”ƒ [0;22mSuspendisse
    [32;1mâ”ƒ [0;22m> id sem consectetuer libero
    [32;1mâ”ƒ [0;22mluctus adipiscing.

    Markdown allows you to be lazy and
    only put the [44;3m>[0;23m before the first line
    of a hard-wrapped paragraph:

    [32;1mâ”ƒ [0;22m> This is a blockquote with two
    [32;1mâ”ƒ [0;22mparagraphs. Lorem ipsum dolor sit
    [32;1mâ”ƒ [0;22mamet,
    [32;1mâ”ƒ [0;22mconsectetuer adipiscing elit.
    [32;1mâ”ƒ [0;22mAliquam hendrerit mi posuere
    [32;1mâ”ƒ [0;22mlectus.
    [32;1mâ”ƒ [0;22mVestibulum enim wisi, viverra nec,
    [32;1mâ”ƒ [0;22mfringilla in, laoreet vitae,
    [32;1mâ”ƒ [0;22mrisus.
    [32;1mâ”ƒ [0;22m
    [32;1mâ”ƒ [0;22m> Donec sit amet nisl. Aliquam
    [32;1mâ”ƒ [0;22msemper ipsum sit amet velit.
    [32;1mâ”ƒ [0;22mSuspendisse
    [32;1mâ”ƒ [0;22mid sem consectetuer libero luctus
    [32;1mâ”ƒ [0;22madipiscing.

    Blockquotes can be nested (i.e. a
    blockquote-in-a-blockquote) by
    adding additional levels of [44;3m>[0;23m:

    [32;1mâ”ƒ [0;22m> This is the first level of
    [32;1mâ”ƒ [0;22mquoting.
    [32;1mâ”ƒ [0;22m>
    [32;1mâ”ƒ [0;22m> > This is nested blockquote.
    [32;1mâ”ƒ [0;22m>
    [32;1mâ”ƒ [0;22m> Back to the first level.

    Blockquotes can contain other
    Markdown elements, including
    headers, lists, and code blocks:

    [32;1mâ”ƒ [0;22m> ## This is a header.
    [32;1mâ”ƒ [0;22m>
    [32;1mâ”ƒ [0;22m> 1.   This is the first list
    [32;1mâ”ƒ [0;22mitem.
    [32;1mâ”ƒ [0;22m> 2.   This is the second list
    [32;1mâ”ƒ [0;22mitem.
    [32;1mâ”ƒ [0;22m>
    [32;1mâ”ƒ [0;22m> Here's some example code:
    [32;1mâ”ƒ [0;22m>
    [32;1mâ”ƒ [0;22m>     return shell_exec("echo
    [32;1mâ”ƒ [0;22m$input | $markdown_script");

    Any decent text editor should make
    email-style quoting easy. For
    example, with BBEdit, you can make a
    selection and choose Increase Quote
    Level from the Text menu.

    [92m1.2.4 Lists[0m

    Markdown supports ordered (numbered)
    and unordered (bulleted) lists.

    Unordered lists use asterisks,
    pluses, and hyphens --
    interchangably -- as list markers:

    [32;1mâ”ƒ [0;22m*   Red
    [32;1mâ”ƒ [0;22m*   Green
    [32;1mâ”ƒ [0;22m*   Blue

    is equivalent to:

    [32;1mâ”ƒ [0;22m+   Red
    [32;1mâ”ƒ [0;22m+   Green
    [32;1mâ”ƒ [0;22m+   Blue

    and:

    [32;1mâ”ƒ [0;22m-   Red
    [32;1mâ”ƒ [0;22m-   Green
    [32;1mâ”ƒ [0;22m-   Blue

    Ordered lists use numbers followed
    by periods:

    [32;1mâ”ƒ [0;22m1.  Bird
    [32;1mâ”ƒ [0;22m2.  McHale
    [32;1mâ”ƒ [0;22m3.  Parish

    It's important to note that the
    actual numbers you use to mark the
    list have no effect on the HTML
    output Markdown produces. The HTML
    Markdown produces from the above
    list is:

    [32;1mâ”ƒ [0;22m<ol>
    [32;1mâ”ƒ [0;22m<li>Bird</li>
    [32;1mâ”ƒ [0;22m<li>McHale</li>
    [32;1mâ”ƒ [0;22m<li>Parish</li>
    [32;1mâ”ƒ [0;22m</ol>

    If you instead wrote the list in
    Markdown like this:

    [32;1mâ”ƒ [0;22m1.  Bird
    [32;1mâ”ƒ [0;22m1.  McHale
    [32;1mâ”ƒ [0;22m1.  Parish

    or even:

    [32;1mâ”ƒ [0;22m3. Bird
    [32;1mâ”ƒ [0;22m1. McHale
    [32;1mâ”ƒ [0;22m8. Parish

    you'd get the exact same HTML
    output. The point is, if you want
    to, you can use ordinal numbers in
    your ordered Markdown lists, so that
    the numbers in your source match
    the numbers in your published HTML.
    But if you want to be lazy, you
    don't have to.

    If you do use lazy list numbering,
    however, you should still start the
    list with the number 1. At some
    point in the future, Markdown may
    support starting ordered lists at an
    arbitrary number.

    List markers typically start at the
    left margin, but may be indented by
    up to three spaces. List markers
    must be followed by one or more
    spaces or a tab.

    To make lists look nice, you can
    wrap items with hanging indents:

    [32;1mâ”ƒ [0;22m*   Lorem ipsum dolor sit amet,
    [32;1mâ”ƒ [0;22mconsectetuer adipiscing elit.
    [32;1mâ”ƒ [0;22m    Aliquam hendrerit mi posuere
    [32;1mâ”ƒ [0;22mlectus. Vestibulum enim wisi,
    [32;1mâ”ƒ [0;22m    viverra nec, fringilla in,
    [32;1mâ”ƒ [0;22mlaoreet vitae, risus.
    [32;1mâ”ƒ [0;22m*   Donec sit amet nisl. Aliquam
    [32;1mâ”ƒ [0;22msemper ipsum sit amet velit.
    [32;1mâ”ƒ [0;22m    Suspendisse id sem
    [32;1mâ”ƒ [0;22mconsectetuer libero luctus
    [32;1mâ”ƒ [0;22madipiscing.

    But if you want to be lazy, you
    don't have to:

    [32;1mâ”ƒ [0;22m*   Lorem ipsum dolor sit amet,
    [32;1mâ”ƒ [0;22mconsectetuer adipiscing elit.
    [32;1mâ”ƒ [0;22mAliquam hendrerit mi posuere
    [32;1mâ”ƒ [0;22mlectus. Vestibulum enim wisi,
    [32;1mâ”ƒ [0;22mviverra nec, fringilla in, laoreet
    [32;1mâ”ƒ [0;22mvitae, risus.
    [32;1mâ”ƒ [0;22m*   Donec sit amet nisl. Aliquam
    [32;1mâ”ƒ [0;22msemper ipsum sit amet velit.
    [32;1mâ”ƒ [0;22mSuspendisse id sem consectetuer
    [32;1mâ”ƒ [0;22mlibero luctus adipiscing.

    If list items are separated by blank
    lines, Markdown will wrap the items
    in [44;3m<p>[0;23m tags in the HTML output. For
    example, this input:

    [32;1mâ”ƒ [0;22m*   Bird
    [32;1mâ”ƒ [0;22m*   Magic

    will turn into:

    [32;1mâ”ƒ [0;22m<ul>
    [32;1mâ”ƒ [0;22m<li>Bird</li>
    [32;1mâ”ƒ [0;22m<li>Magic</li>
    [32;1mâ”ƒ [0;22m</ul>

    But this:

    [32;1mâ”ƒ [0;22m*   Bird
    [32;1mâ”ƒ [0;22m
    [32;1mâ”ƒ [0;22m*   Magic

    will turn into:

    [32;1mâ”ƒ [0;22m<ul>
    [32;1mâ”ƒ [0;22m<li><p>Bird</p></li>
    [32;1mâ”ƒ [0;22m<li><p>Magic</p></li>
    [32;1mâ”ƒ [0;22m</ul>

    List items may consist of multiple
    paragraphs. Each subsequent
    paragraph in a list item must be
    intended by either 4 spaces or one
    tab:

    [32;1mâ”ƒ [0;22m1.  This is a list item with two
    [32;1mâ”ƒ [0;22mparagraphs. Lorem ipsum dolor
    [32;1mâ”ƒ [0;22m    sit amet, consectetuer
    [32;1mâ”ƒ [0;22madipiscing elit. Aliquam hendrerit
    [32;1mâ”ƒ [0;22m    mi posuere lectus.
    [32;1mâ”ƒ [0;22m
    [32;1mâ”ƒ [0;22m    Vestibulum enim wisi, viverra
    [32;1mâ”ƒ [0;22mnec, fringilla in, laoreet
    [32;1mâ”ƒ [0;22m    vitae, risus. Donec sit amet
    [32;1mâ”ƒ [0;22mnisl. Aliquam semper ipsum
    [32;1mâ”ƒ [0;22m    sit amet velit.
    [32;1mâ”ƒ [0;22m
    [32;1mâ”ƒ [0;22m2.  Suspendisse id sem
    [32;1mâ”ƒ [0;22mconsectetuer libero luctus
    [32;1mâ”ƒ [0;22madipiscing.

    It looks nice if you indent every
    line of the subsequent paragraphs,
    but here again, Markdown will allow
    you to be lazy:

    [32;1mâ”ƒ [0;22m*   This is a list item with two
    [32;1mâ”ƒ [0;22mparagraphs.
    [32;1mâ”ƒ [0;22m
    [32;1mâ”ƒ [0;22m    This is the second paragraph
    [32;1mâ”ƒ [0;22min the list item. You're
    [32;1mâ”ƒ [0;22monly required to indent the first
    [32;1mâ”ƒ [0;22mline. Lorem ipsum dolor
    [32;1mâ”ƒ [0;22msit amet, consectetuer adipiscing
    [32;1mâ”ƒ [0;22melit.
    [32;1mâ”ƒ [0;22m
    [32;1mâ”ƒ [0;22m*   Another item in the same list.

    To put a blockquote within a list
    item, the blockquote's [44;3m>[0;23m delimiters
    need to be indented:

    [32;1mâ”ƒ [0;22m*   A list item with a blockquote:
    [32;1mâ”ƒ [0;22m
    [32;1mâ”ƒ [0;22m    > This is a blockquote
    [32;1mâ”ƒ [0;22m    > inside a list item.

    To put a code block within a list
    item, the code block needs to be
    indented [3mtwice[23m -- 8 spaces or two
    tabs:

    [32;1mâ”ƒ [0;22m*   A list item with a code block:
    [32;1mâ”ƒ [0;22m
    [32;1mâ”ƒ [0;22m        <code goes here>

    It's worth noting that it's possible
    to trigger an ordered list by
    accident, by writing something like
    this:

    [32;1mâ”ƒ [0;22m1986. What a great season.

    In other words, a
    [3mnumber-period-space[23m sequence at the
    beginning of a line. To avoid this,
    you can backslash-escape the period:

    [32;1mâ”ƒ [0;22m1986\. What a great season.

    [92m1.2.5 Code Blocks[0m

    Pre-formatted code blocks are used
    for writing about programming or
    markup source code. Rather than
    forming normal paragraphs, the lines
    of a code block are interpreted
    literally. Markdown wraps a code
    block in both [44;3m<pre>[0;23m and [44;3m<code>[0;23m tags.

    To produce a code block in Markdown,
    simply indent every line of the
    block by at least 4 spaces or 1 tab.
    For example, given this input:

    [32;1mâ”ƒ [0;22mThis is a normal paragraph:
    [32;1mâ”ƒ [0;22m
    [32;1mâ”ƒ [0;22m    This is a code block.

    Markdown will generate:

    [32;1mâ”ƒ [0;22m<p>This is a normal paragraph:</p>
    [32;1mâ”ƒ [0;22m
    [32;1mâ”ƒ [0;22m<pre><code>This is a code block.
    [32;1mâ”ƒ [0;22m</code></pre>

    One level of indentation -- 4 spaces
    or 1 tab -- is removed from each
    line of the code block. For example,
    this:

    [32;1mâ”ƒ [0;22mHere is an example of AppleScript:
    [32;1mâ”ƒ [0;22m
    [32;1mâ”ƒ [0;22m    tell application "Foo"
    [32;1mâ”ƒ [0;22m        beep
    [32;1mâ”ƒ [0;22m    end tell

    will turn into:

    [32;1mâ”ƒ [0;22m<p>Here is an example of
    [32;1mâ”ƒ [0;22mAppleScript:</p>
    [32;1mâ”ƒ [0;22m
    [32;1mâ”ƒ [0;22m<pre><code>tell application "Foo"
    [32;1mâ”ƒ [0;22m    beep
    [32;1mâ”ƒ [0;22mend tell
    [32;1mâ”ƒ [0;22m</code></pre>

    A code block continues until it
    reaches a line that is not indented
    (or the end of the article).

    Within a code block, ampersands ([44;3m&[0;23m)
    and angle brackets ([44;3m<[0;23m and [44;3m>[0;23m) are
    automatically converted into HTML
    entities. This makes it very easy to
    include example HTML source code
    using Markdown -- just paste it and
    indent it, and Markdown will handle
    the hassle of encoding the
    ampersands and angle brackets. For
    example, this:

    [32;1mâ”ƒ [0;22m    <div class="footer">
    [32;1mâ”ƒ [0;22m        &copy; 2004 Foo
    [32;1mâ”ƒ [0;22mCorporation
    [32;1mâ”ƒ [0;22m    </div>

    will turn into:

    [32;1mâ”ƒ [0;22m<pre><code>&lt;div
    [32;1mâ”ƒ [0;22mclass="footer"&gt;
    [32;1mâ”ƒ [0;22m    &amp;copy; 2004 Foo
    [32;1mâ”ƒ [0;22mCorporation
    [32;1mâ”ƒ [0;22m&lt;/div&gt;
    [32;1mâ”ƒ [0;22m</code></pre>

    Regular Markdown syntax is not
    processed within code blocks. E.g.,
    asterisks are just literal asterisks
    within a code block. This means
    it's also easy to use Markdown to
    write about Markdown's own syntax.

    [92m1.2.6 Horizontal Rules[0m

    You can produce a horizontal rule
    tag ([44;3m<hr />[0;23m) by placing three or
    more hyphens, asterisks, or
    underscores on a line by themselves.
    If you wish, you may use spaces
    between the hyphens or asterisks.
    Each of the following lines will
    produce a horizontal rule:

    [32;1mâ”ƒ [0;22m* * *
    [32;1mâ”ƒ [0;22m
    [32;1mâ”ƒ [0;22m***
    [32;1mâ”ƒ [0;22m
    [32;1mâ”ƒ [0;22m*****
    [32;1mâ”ƒ [0;22m
    [32;1mâ”ƒ [0;22m- - -
    [32;1mâ”ƒ [0;22m
    [32;1mâ”ƒ [0;22m----------------------------------
    [32;1mâ”ƒ [0;22m-----
    [32;1mâ”ƒ [0;22m
    [32;1mâ”ƒ [0;22m_ _ _

    â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

    [32;1m1.3 Span Elements[0;22m

    [92m1.3.1 Links[0m

    Markdown supports two style of
    links: [3minline[23m and [3mreference[23m.

    In both styles, the link text is
    delimited by [square brackets].

    To create an inline link, use a set
    of regular parentheses immediately
    after the link text's closing square
    bracket. Inside the parentheses,
    put the URL where you want the link
    to point, along with an [3moptional[23m
    title for the link, surrounded in
    quotes. For example:

    [32;1mâ”ƒ [0;22mThis is [an
    [32;1mâ”ƒ [0;22mexample](http://example.com/
    [32;1mâ”ƒ [0;22m"Title") inline link.
    [32;1mâ”ƒ [0;22m
    [32;1mâ”ƒ [0;22m[This link](http://example.net/)
    [32;1mâ”ƒ [0;22mhas no title attribute.

    Will produce:

    [32;1mâ”ƒ [0;22m<p>This is <a
    [32;1mâ”ƒ [0;22mhref="http://example.com/"
    [32;1mâ”ƒ [0;22mtitle="Title">
    [32;1mâ”ƒ [0;22man example</a> inline link.</p>
    [32;1mâ”ƒ [0;22m
    [32;1mâ”ƒ [0;22m<p><a
    [32;1mâ”ƒ [0;22mhref="http://example.net/">This
    [32;1mâ”ƒ [0;22mlink</a> has no
    [32;1mâ”ƒ [0;22mtitle attribute.</p>

    If you're referring to a local
    resource on the same server, you can
    use relative paths:

    [32;1mâ”ƒ [0;22mSee my [About](/about/) page for
    [32;1mâ”ƒ [0;22mdetails.

    Reference-style links use a second
    set of square brackets, inside which
    you place a label of your choosing
    to identify the link:

    [32;1mâ”ƒ [0;22mThis is [an example][id]
    [32;1mâ”ƒ [0;22mreference-style link.

    You can optionally use a space to
    separate the sets of brackets:

    [32;1mâ”ƒ [0;22mThis is [an example] [id]
    [32;1mâ”ƒ [0;22mreference-style link.

    Then, anywhere in the document, you
    define your link label like this, on
    a line by itself:

    [32;1mâ”ƒ [0;22m[id]: http://example.com/
    [32;1mâ”ƒ [0;22m"Optional Title Here"

    That is:
    [32mâ€¢ [0mSquare brackets containing the
      link identifier (optionally
      indented from the left margin
      using up to three spaces);
    [32mâ€¢ [0mfollowed by a colon;
    [32mâ€¢ [0mfollowed by one or more spaces (or
      tabs);
    [32mâ€¢ [0mfollowed by the URL for the link;
    [32mâ€¢ [0moptionally followed by a title
      attribute for the link, enclosed
      in double or single quotes.

    The link URL may, optionally, be
    surrounded by angle brackets:

    [32;1mâ”ƒ [0;22m[id]: <http://example.com/>
    [32;1mâ”ƒ [0;22m"Optional Title Here"

    You can put the title attribute on
    the next line and use extra spaces
    or tabs for padding, which tends to
    look better with longer URLs:

    [32;1mâ”ƒ [0;22m[id]: http://example.com/longish/p
    [32;1mâ”ƒ [0;22math/to/resource/here
    [32;1mâ”ƒ [0;22m    "Optional Title Here"

    Link definitions are only used for
    creating links during Markdown
    processing, and are stripped from
    your document in the HTML output.

    Link definition names may constist
    of letters, numbers, spaces, and
    punctuation -- but they are [3mnot[23m case
    sensitive. E.g. these two links:

    [32;1mâ”ƒ [0;22m[link text][a]
    [32;1mâ”ƒ [0;22m[link text][A]

    are equivalent.

    The [3mimplicit link name[23m shortcut
    allows you to omit the name of the
    link, in which case the link text
    itself is used as the name. Just use
    an empty set of square brackets --
    e.g., to link the word "Google" to
    the google.com web site, you could
    simply write:

    [32;1mâ”ƒ [0;22m[Google][]

    And then define the link:

    [32;1mâ”ƒ [0;22m[Google]: http://google.com/

    Because link names may contain
    spaces, this shortcut even works for
    multiple words in the link text:

    [32;1mâ”ƒ [0;22mVisit [Daring Fireball][] for more
    [32;1mâ”ƒ [0;22minformation.

    And then define the link:

    [32;1mâ”ƒ [0;22m[Daring Fireball]:
    [32;1mâ”ƒ [0;22mhttp://daringfireball.net/

    Link definitions can be placed
    anywhere in your Markdown document.
    I tend to put them immediately after
    each paragraph in which they're
    used, but if you want, you can put
    them all at the end of your
    document, sort of like footnotes.

    Here's an example of reference links
    in action:

    [32;1mâ”ƒ [0;22mI get 10 times more traffic from
    [32;1mâ”ƒ [0;22m[Google] [1] than from
    [32;1mâ”ƒ [0;22m[Yahoo] [2] or [MSN] [3].
    [32;1mâ”ƒ [0;22m
    [32;1mâ”ƒ [0;22m  [1]: http://google.com/
    [32;1mâ”ƒ [0;22m"Google"
    [32;1mâ”ƒ [0;22m  [2]: http://search.yahoo.com/
    [32;1mâ”ƒ [0;22m"Yahoo Search"
    [32;1mâ”ƒ [0;22m  [3]: http://search.msn.com/
    [32;1mâ”ƒ [0;22m"MSN Search"

    Using the implicit link name
    shortcut, you could instead write:

    [32;1mâ”ƒ [0;22mI get 10 times more traffic from
    [32;1mâ”ƒ [0;22m[Google][] than from
    [32;1mâ”ƒ [0;22m[Yahoo][] or [MSN][].
    [32;1mâ”ƒ [0;22m
    [32;1mâ”ƒ [0;22m  [google]: http://google.com/
    [32;1mâ”ƒ [0;22m"Google"
    [32;1mâ”ƒ [0;22m  [yahoo]:
    [32;1mâ”ƒ [0;22mhttp://search.yahoo.com/  "Yahoo
    [32;1mâ”ƒ [0;22mSearch"
    [32;1mâ”ƒ [0;22m  [msn]:    http://search.msn.com/
    [32;1mâ”ƒ [0;22m"MSN Search"

    Both of the above examples will
    produce the following HTML output:

    [32;1mâ”ƒ [0;22m<p>I get 10 times more traffic
    [32;1mâ”ƒ [0;22mfrom <a href="http://google.com/"
    [32;1mâ”ƒ [0;22mtitle="Google">Google</a> than
    [32;1mâ”ƒ [0;22mfrom
    [32;1mâ”ƒ [0;22m<a href="http://search.yahoo.com/"
    [32;1mâ”ƒ [0;22mtitle="Yahoo Search">Yahoo</a>
    [32;1mâ”ƒ [0;22mor <a
    [32;1mâ”ƒ [0;22mhref="http://search.msn.com/"
    [32;1mâ”ƒ [0;22mtitle="MSN Search">MSN</a>.</p>

    For comparison, here is the same
    paragraph written using Markdown's
    inline link style:

    [32;1mâ”ƒ [0;22mI get 10 times more traffic from
    [32;1mâ”ƒ [0;22m[Google](http://google.com/
    [32;1mâ”ƒ [0;22m"Google")
    [32;1mâ”ƒ [0;22mthan from
    [32;1mâ”ƒ [0;22m[Yahoo](http://search.yahoo.com/
    [32;1mâ”ƒ [0;22m"Yahoo Search") or
    [32;1mâ”ƒ [0;22m[MSN](http://search.msn.com/ "MSN
    [32;1mâ”ƒ [0;22mSearch").

    The point of reference-style links
    is not that they're easier to write.
    The point is that with
    reference-style links, your document
    source is vastly more readable.
    Compare the above examples: using
    reference-style links, the paragraph
    itself is only 81 characters long;
    with inline-style links, it's 176
    characters; and as raw HTML, it's
    234 characters. In the raw HTML,
    there's more markup than there is
    text.

    With Markdown's reference-style
    links, a source document much more
    closely resembles the final output,
    as rendered in a browser. By
    allowing you to move the
    markup-related metadata out of the
    paragraph, you can add links without
    interrupting the narrative flow of
    your prose.

    [92m1.3.2 Emphasis[0m

    Markdown treats asterisks ([44;3m*[0;23m) and
    underscores ([44;3m_[0;23m) as indicators of
    emphasis. Text wrapped with one [44;3m*[0;23m or
    [44;3m_[0;23m will be wrapped with an HTML [44;3m<em>[0m
    [3;44m[0;23m tag; double [44;3m*[0;23m's or [44;3m_[0;23m's will be
    wrapped with an HTML [44;3m<strong>[0;23m tag.
    E.g., this input:

    [32;1mâ”ƒ [0;22m*single asterisks*
    [32;1mâ”ƒ [0;22m
    [32;1mâ”ƒ [0;22m_single underscores_
    [32;1mâ”ƒ [0;22m
    [32;1mâ”ƒ [0;22m**double asterisks**
    [32;1mâ”ƒ [0;22m
    [32;1mâ”ƒ [0;22m__double underscores__

    will produce:

    [32;1mâ”ƒ [0;22m<em>single asterisks</em>
    [32;1mâ”ƒ [0;22m
    [32;1mâ”ƒ [0;22m<em>single underscores</em>
    [32;1mâ”ƒ [0;22m
    [32;1mâ”ƒ [0;22m<strong>double asterisks</strong>
    [32;1mâ”ƒ [0;22m
    [32;1mâ”ƒ [0;22m<strong>double
    [32;1mâ”ƒ [0;22munderscores</strong>

    You can use whichever style you
    prefer; the lone restriction is that
    the same character must be used to
    open and close an emphasis span.

    Emphasis can be used in the middle
    of a word:

    [32;1mâ”ƒ [0;22mun*fucking*believable

    But if you surround an [44;3m*[0;23m or [44;3m_[0;23m with
    spaces, it'll be treated as a
    literal asterisk or underscore.

    To produce a literal asterisk or
    underscore at a position where it
    would otherwise be used as an
    emphasis delimiter, you can
    backslash escape it:

    [32;1mâ”ƒ [0;22m\*this text is surrounded by
    [32;1mâ”ƒ [0;22mliteral asterisks\*

    [92m1.3.3 Code[0m

    To indicate a span of code, wrap it
    with backtick quotes ([44;3m`[0;23m). Unlike a
    pre-formatted code block, a code
    span indicates code within a normal
    paragraph. For example:

    [32;1mâ”ƒ [0;22mUse the `printf()` function.

    will produce:

    [32;1mâ”ƒ [0;22m<p>Use the <code>printf()</code>
    [32;1mâ”ƒ [0;22mfunction.</p>

    To include a literal backtick
    character within a code span, you
    can use multiple backticks as the
    opening and closing delimiters:

    [32;1mâ”ƒ [0;22m``There is a literal backtick (`)
    [32;1mâ”ƒ [0;22mhere.``

    which will produce this:

    [32;1mâ”ƒ [0;22m<p><code>There is a literal
    [32;1mâ”ƒ [0;22mbacktick (`) here.</code></p>

    The backtick delimiters surrounding
    a code span may include spaces --
    one after the opening, one before
    the closing. This allows you to
    place literal backtick characters at
    the beginning or end of a code
    span:

    [32;1mâ”ƒ [0;22mA[37m [0msingle[37m [0mbacktick[37m [0m[1m[32min[0m[37m [0ma[37m [0mcode[37m [0mspan:[37m[0m
    [32;1mâ”ƒ [0;22m[37m[0m[1m[30m``[0m[37m [0m[1m[30m`[0m[37m [0m[1m[30m``[0m[37m[0m
    [32;1mâ”ƒ [0;22m[37m[0m
    [32;1mâ”ƒ [0;22m[37m[0mA[37m [0mbacktick[1m[30m-[0mdelimited[37m [0mstring[37m [0m[1m[32min[0m[37m [0ma[37m[0m
    [32;1mâ”ƒ [0;22m[37m[0mcode[37m [0mspan:[37m [0m[1m[30m``[0m[37m [0m[1m[30m`[0mfoo[1m[30m`[0m[37m [0m[1m[30m``[0m[37m[0m
    [32;1mâ”ƒ [0;22m[37m[0m

    will produce:

    [32;1mâ”ƒ [0;22m[1m[30m<[0mp[1m[30m>[0mA[37m [0msingle[37m [0mbacktick[37m [0m[1m[32min[0m[37m [0ma[37m [0mcode[37m[0m
    [32;1mâ”ƒ [0;22m[37m[0mspan:[37m [0m[1m[30m<[0mcode[1m[30m>`</[0mcode[1m[30m></[0mp[1m[30m>[0m[37m[0m
    [32;1mâ”ƒ [0;22m[37m[0m
    [32;1mâ”ƒ [0;22m[37m[0m[1m[30m<[0mp[1m[30m>[0mA[37m [0mbacktick[1m[30m-[0mdelimited[37m [0mstring[37m [0m[1m[32min[0m[37m[0m
    [32;1mâ”ƒ [0;22m[37m[0ma[37m [0mcode[37m [0mspan:[37m[0m
    [32;1mâ”ƒ [0;22m[37m[0m[1m[30m<[0mcode[1m[30m>`[0mfoo[1m[30m`</[0mcode[1m[30m></[0mp[1m[30m>[0m[37m[0m
    [32;1mâ”ƒ [0;22m[37m[0m

    With a code span, ampersands and
    angle brackets are encoded as HTML
    entities automatically, which makes
    it easy to include example HTML
    tags. Markdown will turn this:

    [32;1mâ”ƒ [0;22mPlease don't use any `<blink>`
    [32;1mâ”ƒ [0;22mtags.

    into:

    [32;1mâ”ƒ [0;22m<p>Please don't use any
    [32;1mâ”ƒ [0;22m<code>&lt;blink&gt;</code>
    [32;1mâ”ƒ [0;22mtags.</p>

    You can write this:

    [32;1mâ”ƒ [0;22m`&#8212;` is the decimal-encoded
    [32;1mâ”ƒ [0;22mequivalent of `&mdash;`.

    to produce:

    [32;1mâ”ƒ [0;22m<p><code>&amp;#8212;</code> is the
    [32;1mâ”ƒ [0;22mdecimal-encoded
    [32;1mâ”ƒ [0;22mequivalent of
    [32;1mâ”ƒ [0;22m<code>&amp;mdash;</code>.</p>

    [92m1.3.4 Images[0m

    Admittedly, it's fairly difficult to
    devise a "natural" syntax for
    placing images into a plain text
    document format.

    Markdown uses an image syntax that
    is intended to resemble the syntax
    for links, allowing for two styles:
    [3minline[23m and [3mreference[23m.

    Inline image syntax looks like this:

    [32;1mâ”ƒ [0;22m![Alt text](/path/to/img.jpg)
    [32;1mâ”ƒ [0;22m
    [32;1mâ”ƒ [0;22m![Alt text](/path/to/img.jpg
    [32;1mâ”ƒ [0;22m"Optional title")

    That is:
    [32mâ€¢ [0mAn exclamation mark: [44;3m![0;23m;
    [32mâ€¢ [0mfollowed by a set of square
      brackets, containing the [44;3malt[0;23m
      attribute text for the image;
    [32mâ€¢ [0mfollowed by a set of parentheses,
      containing the URL or path to the
      image, and an optional [44;3mtitle[0;23m
      attribute enclosed in double or
      single quotes.

    Reference-style image syntax looks
    like this:

    [32;1mâ”ƒ [0;22m![Alt text][id]

    Where "id" is the name of a defined
    image reference. Image references
    are defined using syntax identical
    to link references:

    [32;1mâ”ƒ [0;22m[id]: url/to/image  "Optional
    [32;1mâ”ƒ [0;22mtitle attribute"

    As of this writing, Markdown has no
    syntax for specifying the dimensions
    of an image; if this is important
    to you, you can simply use regular
    HTML [44;3m<img>[0;23m tags.

    â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

    [32;1m1.4 Miscellaneous[0;22m

    [92m1.4.1 Automatic Links[0m

    Markdown supports a shortcut style
    for creating "automatic" links for
    URLs and email addresses: simply
    surround the URL or email address
    with angle brackets. What this means
    is that if you want to show the
    actual text of a URL or email
    address, and also have it be a
    clickable link, you can do this:

    [32;1mâ”ƒ [0;22m<http://example.com/>

    Markdown will turn this into:

    [32;1mâ”ƒ [0;22m<a href="http://example.com/">http
    [32;1mâ”ƒ [0;22m://example.com/</a>

    Automatic links for email addresses
    work similarly, except that Markdown
    will also perform a bit of
    randomized decimal and hex
    entity-encoding to help obscure your
    address from address-harvesting
    spambots. For example, Markdown will
    turn this:

    [32;1mâ”ƒ [0;22m<address@example.com>

    into something like this:

    [32;1mâ”ƒ [0;22m<a href="&#x6D;&#x61;i&#x6C;&#x74;
    [32;1mâ”ƒ [0;22m&#x6F;:&#x61;&#x64;&#x64;&#x72;&#x
    [32;1mâ”ƒ [0;22m65;
    [32;1mâ”ƒ [0;22m&#115;&#115;&#64;&#101;&#120;&#x61
    [32;1mâ”ƒ [0;22m;&#109;&#x70;&#x6C;e&#x2E;&#99;&#1
    [32;1mâ”ƒ [0;22m11;
    [32;1mâ”ƒ [0;22m&#109;">&#x61;&#x64;&#x64;&#x72;&#
    [32;1mâ”ƒ [0;22mx65;&#115;&#115;&#64;&#101;&#120;&
    [32;1mâ”ƒ [0;22m#x61;
    [32;1mâ”ƒ [0;22m&#109;&#x70;&#x6C;e&#x2E;&#99;&#11
    [32;1mâ”ƒ [0;22m1;&#109;</a>

    which will render in a browser as a
    clickable link to
    "address@example.com".

    (This sort of entity-encoding trick
    will indeed fool many, if not most,
    address-harvesting bots, but it
    definitely won't fool all of them.
    It's better than nothing, but an
    address published in this way will
    probably eventually start receiving
    spam.)

    [92m1.4.2 Backslash Escapes[0m

    Markdown allows you to use backslash
    escapes to generate literal
    characters which would otherwise
    have special meaning in Markdown's
    formatting syntax. For example, if
    you wanted to surround a word with
    literal asterisks (instead of an
    HTML [44;3m<em>[0;23m tag), you can backslashes
    before the asterisks, like this:

    [32;1mâ”ƒ [0;22m\*literal asterisks\*

    Markdown provides backslash escapes
    for the following characters:

    [32;1mâ”ƒ [0;22m\   backslash
    [32;1mâ”ƒ [0;22m`   backtick
    [32;1mâ”ƒ [0;22m*   asterisk
    [32;1mâ”ƒ [0;22m_   underscore
    [32;1mâ”ƒ [0;22m{}  curly braces
    [32;1mâ”ƒ [0;22m[]  square brackets
    [32;1mâ”ƒ [0;22m()  parentheses
    [32;1mâ”ƒ [0;22m#   hash mark
    [32;1mâ”ƒ [0;22m+    plus sign
    [32;1mâ”ƒ [0;22m-    minus sign (hyphen)
    [32;1mâ”ƒ [0;22m.   dot
    [32;1mâ”ƒ [0;22m!   exclamation mark

